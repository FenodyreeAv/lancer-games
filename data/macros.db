{"name":"New Macro","type":"chat","scope":"global","author":"1zMK3JgrEAsLgu7f","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"1zMK3JgrEAsLgu7f":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1694330811161,"modifiedTime":1694330811161,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"4RDBdOnbJOQv26UE"}
{"name":"Scan","type":"script","author":"SmBZsrIgzoBu1l21","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/tech_quick.svg","scope":"global","command":"let targets = Array.from(game.user.targets);\n\nfunction sort_features(a, b) {\n    return b.Origin.base-a.Origin.base\n}\n\nfunction construct_features(sc_dir, o) {\n    let sc_list = ``;\n    sc_list += `<p>${o}</p>`\n    let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n    sc_features.forEach(i => {\n        let sc_name = ``;\n        let sc_desc = ``;\n        if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n            sc_name = \"<code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC SYSTEM</code>\";\n            sc_desc = \"???\";\n        }\n        else {\n            sc_name = i.Name;\n            if (i.Effect) {\n                sc_desc = i.Effect;\n            } else {\n                sc_desc = \"No description given.\";\n            }\n            if (i.Trigger) {\n                sc_desc = `Trigger:${i.Trigger}<br>${sc_desc}`;\n            }\n        }\n        let sc_entry = `<details><summary>${sc_name}</summary><p>${sc_desc}</p></details>`;\n        sc_list += sc_entry;\n    });\n    return sc_list\n}\n\nfunction construct_templates(sc_dir) {\n    let sc_templates = ``;\n    let sc_temp = sc_dir._templates;\n    if (!sc_temp || sc_temp.length == 0) {\n        sc_templates += \"<p>NONE</p>\";\n    } else {\n        sc_temp.forEach(i => {\n            let sc_entry = `<p>${i.Name}</p>`;\n            sc_templates += sc_entry;\n        });\n    }\n\n    sc_templates += \"<br>\";\n    return sc_templates\n}\n\ntargets.forEach(target => {\n    let sc_dir = target.document.actor._prev_derived.mm\n    let hase_table_html = `\n    <table>\n        <tr>\n            <th>HULL</th><th>AGI</th><th>SYS</th><th>ENG</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Hull || 0}</td><td>${sc_dir.Agi || 0}</td><td>${sc_dir.Sys || 0}</td><td>${sc_dir.Eng || 0}</td>\n        </tr>\n    </table>\n    `\n    let stat_table_html = `\n    <table>\n        <tr>\n            <th>Armor</th><th>HP</th><th>Heat</th><th>Speed</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Armor}</td><td>${sc_dir.CurrentHP}/${sc_dir.MaxHP}</td><td>${sc_dir.CurrentHeat || 0}/${sc_dir.HeatCapacity || 0}</td><td>${sc_dir.Speed}</td>\n        </tr>\n        <tr>\n            <th>Evasion</th><th>E-Def</th><th>Save</th><th>Sensors</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Evasion}</td><td>${sc_dir.EDefense}</td><td>${sc_dir.SaveTarget}</td><td>${sc_dir.SensorRange}</td>\n        </tr>\n        <tr>\n            <th>Size</th><th>Activ</th><th>Struct</th><th>Stress</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Size}</td><td>${sc_dir.Activations || 1}</td><td>${sc_dir.CurrentStructure || 0}/${sc_dir.MaxStructure || 0}</td><td>${sc_dir.CurrentStress || 0}/${sc_dir.MaxStress || 0}</td>\n        </tr>\n    </table>\n    `\n    console.log(sc_dir)\n    let sc_class = (!sc_dir._classes || sc_dir._classes.length == 0) ? \"NONE\" : sc_dir._classes[0].Name\n    let sc_tier = sc_dir.Tier ? sc_dir.Tier : 0\n    let sc_templates = construct_templates(sc_dir)\n    let sc_list = ``\n    if (!sc_dir._features || sc_dir._features.length == 0) {\n        sc_list += \"<p>NONE</p>\";\n    } else {\n        let sc_origins = new Array\n        sc_dir._features.forEach(f => {\n            let origin = f.Origin.name\n            if (!sc_origins.includes(origin)) {\n                sc_origins.push(origin)\n            }\n        })\n        sc_origins.forEach(o => {\n            sc_list += construct_features(sc_dir, o)\n        })\n    }\n\n    ChatMessage.create({\n        user: game.user._id,\n        content: `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>`  + hase_table_html + stat_table_html + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list\n    });\n})","folder":null,"sort":0,"flags":{"core":{"sourceId":"Compendium.lancer.core_macros.3KPsYon0LoANWX54"}},"ownership":{"default":0,"2a2IgZ2kiAqXSGqu":3,"SmBZsrIgzoBu1l21":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1691905923582,"modifiedTime":1691905923582,"lastModifiedBy":"SmBZsrIgzoBu1l21"},"_id":"7cpZo6rKmuTd73iC"}
{"name":"New Macro","type":"chat","scope":"global","author":"1zMK3JgrEAsLgu7f","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"1zMK3JgrEAsLgu7f":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1708255045274,"modifiedTime":1708255045274,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"8TPM9qPIVoWFJoSW"}
{"name":"New Macro","type":"chat","scope":"global","author":"1zMK3JgrEAsLgu7f","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"1zMK3JgrEAsLgu7f":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1707034654747,"modifiedTime":1707034654747,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"C2ZhfU11OW8QRZzE"}
{"name":"Timed Effect","type":"script","author":"1zMK3JgrEAsLgu7f","img":"https://assets.forge-vtt.com/bazaar/core/icons/svg/aura.svg","scope":"global","command":"function setCombatEffect(targetID, effect, duration, note, originID) {\n  const statusEffect = CONFIG.statusEffects.find(x => x.label === effect);\n  const target = canvas.tokens.placeables.find(x => x.id === targetID);\n  let effectData = {\n    label: statusEffect.label,\n    icon: statusEffect.icon,\n    flags: {\n      'core': {\n        statusEffectsEnabled: true,\n        statusId: statusEffect.id\n      },\n      'csm-lancer-qol': {\n        targetID: targetID,\n        effect: statusEffect.label,\n        duration: duration,\n        note: note,\n        originID: originID,\n        appliedRound: game.combat.round\n      }\n    },\n    changes: []\n  };\n  target.actor.createEmbeddedDocuments(\"ActiveEffect\", [effectData]);\n}\n\nfunction buildEffectsList(statusEffects) {\n  let list = [];\n  for (i = 0; i < statusEffects.length; i++) {\n    list.push(statusEffects[i].label);\n  }\n  return list;\n}\n\nif (!token) return ui.notifications.error(`Token not found!`);\nif (!game.combat) return ui.notifications.error('You are not in combat!');\n\nlet effects = buildEffectsList(CONFIG.statusEffects);\n\nlet effectOriginator = [];\n\nlet effectTarget = [];\n\nlet durations = [\n  {\n    label: 'end of targets next turn',\n    turns: 1,\n    rounds: 1\n  },\n  {\n    label: 'start of targets next turn',\n    turns: 1,\n    rounds: 1\n  },\n  {\n    label: 'end of targets current turn',\n    turns: 1,\n    rounds: 0\n  },\n  {\n    label: 'end of originators next turn',\n    turns: 1,\n    rounds: 1\n  },\n  {\n    label: 'start of originators next turn',\n    turns: 0,\n    rounds: 1\n  },\n  {\n    label: 'end of originators current turn',\n    turns: 1,\n    rounds: 1\n  }\n]\n\nnew Dialog({\n  title: \"Set a Timed Effect\",\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Target:</label>\n        <select id=\"targetID\" name=\"targetID\">\n          ${canvas.tokens.placeables.map(n => `<option selected=\"${token.id}\" value=\"${n.id}\">${n.name}</option>`)}\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Select an effect:</label>\n        <select id=\"effect\" name=\"effect\">\n          ${effects.map(o => `<option value=\"${o}\">${o}</option>`)}\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Select a duration:</label>\n        <select id=\"duration\" name=\"duration\">\n          ${durations.map(p => `<option value=\"${p.label}\">${p.label}</option>`)}\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Note:</label>\n        <input id=\"note\" name=\"note\" type=\"text\" value=\"\">\n      </div>\n      <div class=\"form-group\">\n        <label>Originator:</label>\n        <select id=\"originID\" name=\"originID\">\n          ${canvas.tokens.placeables.map(n => `<option selected=\"${token.id}\" value=\"${n.id}\">${n.name}</option>`)}\n        </select>\n      </div>\n    </form>\n  `,\n  buttons: {\n    ok: {\n      label: \"OK\",\n      callback: async (html) => {\n        let targetID = html.find('[name=targetID')[0].value;\n        let effect = html.find('[name=effect]')[0].value;\n        let duration = durations.find(x => x.label === html.find('[name=duration')[0].value);\n        let note = html.find('[name=note]')[0].value;\n        let originID = html.find('[name=originID')[0].value;\n        console.log(`TargetID selected: ${targetID}`);\n        console.log(`Effect selected: ${effect}`);\n        console.log(`Duration selected: ${duration.label} Turns: ${duration.turns} Rounds: ${duration.rounds}`);\n        console.log(`Note entered: ${note}`);\n        console.log(`OriginID selected: ${originID}`);\n        setCombatEffect(targetID, effect, duration, note, originID);\n      }\n    },\n    cancel: {\n      label: \"Cancel\"\n    }\n  }\n}).render(true);","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.0xBxcvdfxBXjN6ZP"}},"ownership":{"default":0,"h5SktFplMLsbBcsW":3,"1zMK3JgrEAsLgu7f":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.291","createdTime":1689726821671,"modifiedTime":1689726821671,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"K1nEm8XG7bcmLWPT"}
{"name":"New Macro","type":"chat","scope":"global","author":"02KJJeoVrPep4Uam","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"02KJJeoVrPep4Uam":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1699790240233,"modifiedTime":1699790240233,"lastModifiedBy":"02KJJeoVrPep4Uam"},"_id":"KKqKRcAUJbhJCpsA"}
{"name":"New Macro","type":"chat","scope":"global","author":"1zMK3JgrEAsLgu7f","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"1zMK3JgrEAsLgu7f":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1709461498956,"modifiedTime":1709461498956,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"QXXHSu2zga80A4c5"}
{"name":"Stabilize Token","type":"script","flags":{"core":{"sourceId":"Macro.d699WQo7DT5zrIK7"}},"scope":"global","command":"(async ()=>{\n    \n    if (canvas.tokens.controlled.length !== 1) {\n        ui.notifications.error(\"Select one and only one token\");\n        return;\n    }\n\n    game.lancer.stabilizeMacro(canvas.tokens.controlled[0].actor.id);\n\n})();","author":"DEgP96KnkMaXvMQG","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/marker.svg","ownership":{"default":0,"PN55ItGPHjs7sY8L":3,"DEgP96KnkMaXvMQG":3},"folder":null,"sort":0,"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1691905851290,"modifiedTime":1691905851290,"lastModifiedBy":"DEgP96KnkMaXvMQG"},"_id":"TzlxNrOjkczww5Tc"}
{"name":"New Macro","type":"chat","author":"1zMK3JgrEAsLgu7f","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"flags":{},"_id":"XVrSPGp2P4wFvEID","ownership":{"default":0,"1zMK3JgrEAsLgu7f":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"name":"New Macro","type":"chat","scope":"global","author":"0DqqjXMUZ4L8l5FY","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"0DqqjXMUZ4L8l5FY":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1702203330731,"modifiedTime":1702203330731,"lastModifiedBy":"0DqqjXMUZ4L8l5FY"},"_id":"c2q1VYyoJ3V5VXdb"}
{"name":"Scan","type":"script","author":"SmBZsrIgzoBu1l21","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/tech_quick.svg","scope":"global","command":"let targets = Array.from(game.user.targets);\n\nfunction sort_features(a, b) {\n    return b.Origin.base-a.Origin.base\n}\n\nfunction construct_features(sc_dir, o) {\n    let sc_list = ``;\n    sc_list += `<p>${o}</p>`\n    let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n    sc_features.forEach(i => {\n        let sc_name = ``;\n        let sc_desc = ``;\n        if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n            sc_name = \"<code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC SYSTEM</code>\";\n            sc_desc = \"???\";\n        }\n        else {\n            sc_name = i.Name;\n            if (i.Effect) {\n                sc_desc = i.Effect;\n            } else {\n                sc_desc = \"No description given.\";\n            }\n            if (i.Trigger) {\n                sc_desc = `Trigger:${i.Trigger}<br>${sc_desc}`;\n            }\n        }\n        let sc_entry = `<details><summary>${sc_name}</summary><p>${sc_desc}</p></details>`;\n        sc_list += sc_entry;\n    });\n    return sc_list\n}\n\nfunction construct_templates(sc_dir) {\n    let sc_templates = ``;\n    let sc_temp = sc_dir._templates;\n    if (!sc_temp || sc_temp.length == 0) {\n        sc_templates += \"<p>NONE</p>\";\n    } else {\n        sc_temp.forEach(i => {\n            let sc_entry = `<p>${i.Name}</p>`;\n            sc_templates += sc_entry;\n        });\n    }\n\n    sc_templates += \"<br>\";\n    return sc_templates\n}\n\ntargets.forEach(target => {\n    let sc_dir = target.document.actor._prev_derived.mm\n    let hase_table_html = `\n    <table>\n        <tr>\n            <th>HULL</th><th>AGI</th><th>SYS</th><th>ENG</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Hull || 0}</td><td>${sc_dir.Agi || 0}</td><td>${sc_dir.Sys || 0}</td><td>${sc_dir.Eng || 0}</td>\n        </tr>\n    </table>\n    `\n    let stat_table_html = `\n    <table>\n        <tr>\n            <th>Armor</th><th>HP</th><th>Heat</th><th>Speed</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Armor}</td><td>${sc_dir.CurrentHP}/${sc_dir.MaxHP}</td><td>${sc_dir.CurrentHeat || 0}/${sc_dir.HeatCapacity || 0}</td><td>${sc_dir.Speed}</td>\n        </tr>\n        <tr>\n            <th>Evasion</th><th>E-Def</th><th>Save</th><th>Sensors</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Evasion}</td><td>${sc_dir.EDefense}</td><td>${sc_dir.SaveTarget}</td><td>${sc_dir.SensorRange}</td>\n        </tr>\n        <tr>\n            <th>Size</th><th>Activ</th><th>Struct</th><th>Stress</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Size}</td><td>${sc_dir.Activations || 1}</td><td>${sc_dir.CurrentStructure || 0}/${sc_dir.MaxStructure || 0}</td><td>${sc_dir.CurrentStress || 0}/${sc_dir.MaxStress || 0}</td>\n        </tr>\n    </table>\n    `\n    console.log(sc_dir)\n    let sc_class = (!sc_dir._classes || sc_dir._classes.length == 0) ? \"NONE\" : sc_dir._classes[0].Name\n    let sc_tier = sc_dir.Tier ? sc_dir.Tier : 0\n    let sc_templates = construct_templates(sc_dir)\n    let sc_list = ``\n    if (!sc_dir._features || sc_dir._features.length == 0) {\n        sc_list += \"<p>NONE</p>\";\n    } else {\n        let sc_origins = new Array\n        sc_dir._features.forEach(f => {\n            let origin = f.Origin.name\n            if (!sc_origins.includes(origin)) {\n                sc_origins.push(origin)\n            }\n        })\n        sc_origins.forEach(o => {\n            sc_list += construct_features(sc_dir, o)\n        })\n    }\n\n    ChatMessage.create({\n        user: game.user._id,\n        content: `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>`  + hase_table_html + stat_table_html + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list\n    });\n})","folder":null,"sort":0,"flags":{"core":{"sourceId":"Compendium.lancer.core_macros.3KPsYon0LoANWX54"}},"ownership":{"default":0,"2a2IgZ2kiAqXSGqu":3,"SmBZsrIgzoBu1l21":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.291","createdTime":1689726356376,"modifiedTime":1689726356376,"lastModifiedBy":"SmBZsrIgzoBu1l21"},"_id":"gbAiQgMQ0KLws2Q7"}
{"name":"New Macro","type":"chat","scope":"global","author":"1zMK3JgrEAsLgu7f","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"1zMK3JgrEAsLgu7f":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1709461514290,"modifiedTime":1709461514290,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"gqiCge4HYjFnILWi"}
{"name":"Scan (Journal)","type":"script","author":"0DqqjXMUZ4L8l5FY","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/tech_quick.svg","scope":"global","command":"//Sanity Check - Can this user even create folders and journal entries? Does the folder journal folder exist?\nif (JournalEntry.canUserCreate(game.user) == false) {\n  ui.notifications.error(`${game.user.name} attempted to run SCAN to Journal but lacks proper permissions. Please correct and try again.`);\n  return;\n};\n\n//Variables - Change these to control the macro\n\n//journalFolderName - The name, as displayed in foundry, of the folder you want the journal entries to save to. Remember to enclose in quotes: 'example'\nvar journalFolderName = 'SCAN Database';\n\n//nameTemplate - The text before the scan number and target name. Remember to enclose in quotes: 'example'\nvar nameTemplate = 'SCAN: ';\n\n//numberLength - The total length of the scan number, extra spaces are filled with 0s. Setting this to 3, for example would produce scan number 001 on your first scan. Integers only and no quotes.\nvar numberLength = 3;\n\n//startingNumber - If you want the scan number to start at something other than 1 then change this. Integers only and no quotes.\nvar startingNumber = 1;\n\n//permissionLevel - This sets the default permission level of the scan entry. This must be an integer between 0 and 3 where 0 is \"None\", 1 is \"Limited\", 2 is \"Observer\", and 3 is \"Owner\"\nvar permissionLevel = 3;\n\n//updateExisting - This macro will check if a scan journal entry exists and update it, set this to false if you want it to create a new scan journal entry.\nvar updateExisting = true;\n\n//targets - Gets the data for your currently selected target(s) and stores it for later use. Do not change.\nlet targets = Array.from(game.user.targets);\n\n//Functions\n//zeroPad - Adds a set number 0s to the fed number to produce a consistent length number.\nconst zeroPad = (num, places) => String(num).padStart(places, '0');\n\n//sort_features - Sorts the feature list for the scanned target    \nfunction sort_features(a, b) {\n  return b.Origin.base - a.Origin.base\n};\n\n//construct_features - Builds out the list of selectable features for the scanned target, includes support for exotics.\nfunction construct_features(sc_dir, o) {\n  let sc_list = ``;\n  sc_list += `<p>${o}</p>`\n  let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n  sc_features.forEach(i => {\n    let sc_name = ``;\n    let sc_desc = ``;\n    if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n      sc_name = \"<code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC SYSTEM</code>\";\n      sc_desc = \"???\";\n    }\n    else {\n      sc_name = i.Name;\n      if (i.Effect) {\n        sc_desc = i.Effect;\n      } else {\n        sc_desc = \"No description given.\";\n      }\n      if (i.Trigger) {\n        sc_desc = `Trigger:${i.Trigger}<br>${sc_desc}`;\n      }\n    }\n    let sc_entry = `<details><summary>${sc_name}</summary><p>${sc_desc}</p></details>`;\n    sc_list += sc_entry;\n  });\n  return sc_list\n};\n\n//construct_weapons - Builds out the table of weapons for the scanned target, includes support for exotics.\nfunction construct_weapons(sc_dir, o, sc_tier) {\n  let sc_weapons = ``;\n  let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n  sc_features.forEach(i => {\n    let sc_name = ``;\n    let sc_desc = ``;\n    let sc_entry = ``;\n    let sc_range = ``;\n    let sc_damage = ``;\n    let sc_accuracy = ``;\n    if (!i.WepType) { return sc_weapons };\n    sc_weapons += `<table>`;\n    if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n      sc_name = \"<tr><th><code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC WEAPON</code></th></tr>\";\n      sc_desc = \"<tr><td>???</td></tr>\";\n      sc_entry = sc_name + sc_desc;\n    }\n    else {\n      sc_name = `<tr><th colspan=\"4\">${i.Name}</th></tr>`;\n      sc_entry += sc_name;\n      sc_desc = `<tr>`;\n      sc_desc += `<td>+${i.AttackBonus[sc_tier - 1]} ATTACK</td>`;\n      if (i.Accuracy[sc_tier - 1]) {\n        if (i.Accuracy[sc_tier - 1] > 0) {\n          sc_accuracy = '+' + i.Accuracy[sc_tier - 1] + ' ACCURACY'\n        } else {\n          sc_accuracy = '-' + i.Accuracy[sc_tier - 1] + ' DIFFICULTY'\n        };\n      };\n      sc_desc += `<td>${sc_accuracy}</td>`;\n      if (i.Range.length > 0) { i.Range.forEach(r => sc_range += r.RangeType + ' ' + r.Value + '&nbsp&nbsp&nbsp') };\n      sc_desc += `<td>${sc_range}</td>`;\n      if (i.Damage.length > 0) { i.Damage[sc_tier - 1].forEach(d => sc_damage += d.Value + ' ' + d.DamageType + '&nbsp&nbsp&nbsp') };\n      sc_desc += `<td>${sc_damage}</td>`;\n      if (i.Loaded) { sc_desc += `<td>LOADED</td>` } else { sc_desc += `<td>UNLOADED</td>` };\n      if (i.Uses > 0 && i.BaseLimit > 0) { sc_desc += `<td>USES: ${i.Uses}/${i.BaseLimit}</td>` };\n      sc_desc += `<tr>`;\n      if (i.Trigger) {\n        sc_desc += `<tr><td colspan=\"6\"><details><summary>Trigger</summary><p>${i.Trigger}</p></details></td></tr>`;\n      };\n      if (i.OnHit) {\n        sc_desc += `<tr><td colspan=\"6\"><details><summary>On Hit</summary><p>${i.OnHit}</p></details></td></tr>`;\n      };\n      if (i.Effect) {\n        sc_desc += `<tr><td colspan=\"6\">${i.Effect}</td></tr>`;\n      };\n      if (i.Tags.length > 0) {\n        sc_desc += `<tr><td colspan=\"6\"><details><summary>Tags</summary>`;\n        i.Tags.forEach((t, index) => {\n          sc_desc += `<p>${t.Tag.Name.replace(\"{VAL}\", t.Value)}</p>`;\n        });\n        sc_desc += `</details></td></tr>`;\n      };\n      sc_entry += sc_desc;\n    }\n    sc_weapons += sc_entry;\n    sc_weapons += `</table>`\n  });\n  return sc_weapons\n};\n\n//construct_templates\nfunction construct_templates(sc_dir) {\n  let sc_templates = ``;\n  let sc_temp = sc_dir._templates;\n  if (!sc_temp || sc_temp.length == 0) {\n    sc_templates += \"<p>NONE</p>\";\n  } else {\n    sc_temp.forEach(i => {\n      let sc_entry = `<p>${i.Name}</p>`;\n      sc_templates += sc_entry;\n    });\n  }\n\n  sc_templates += \"<br>\";\n  return sc_templates\n};\nconst journalFolder = game.folders.getName(journalFolderName)\nif (!journalFolder && journalFolderName.length > 0) {\n  try {\n    await Folder.create({ name: journalFolderName, type: \"JournalEntry\" })\n  } catch (error) {\n    ui.notifications.error(`${journalFolderName} does not exist and must be created manually by a user with permissions to do so.`);\n    return;\n  }\n};\n\ntargets.forEach(async (target, index) => {\n  let sc_dir = await target.document.actor.system.derived.mm_promise;\n  let hase_table_html = `\n    <p><img style=\"border: 3px dashed #000000; float: left; margin-right: 5px; margin-left: 5px;\" src=\"${target.document.actor.img}\" width=\"30%\" height=\"30%\" /></p>\n    <div style=\"color: #000000; width: 65%; float: right; text-align: left;\">\n    <table>\n        <tr>\n            <th>HULL</th><th>AGI</th><th>SYS</th><th>ENG</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Hull || 0}</td><td>${sc_dir.Agi || 0}</td><td>${sc_dir.Sys || 0}</td><td>${sc_dir.Eng || 0}</td>\n        </tr>\n    </table>\n    `\n  let stat_table_html = `\n    <table>\n        <tr>\n            <th>Armor</th><th>HP</th><th>Heat</th><th>Speed</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Armor}</td><td>${sc_dir.CurrentHP}/${sc_dir.MaxHP}</td><td>${sc_dir.CurrentHeat || 0}/${sc_dir.HeatCapacity || 0}</td><td>${sc_dir.Speed}</td>\n        </tr>\n        <tr>\n            <th>Evasion</th><th>E-Def</th><th>Save</th><th>Sensors</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Evasion}</td><td>${sc_dir.EDefense}</td><td>${sc_dir.SaveTarget}</td><td>${sc_dir.SensorRange}</td>\n        </tr>\n        <tr>\n            <th>Size</th><th>Activ</th><th>Struct</th><th>Stress</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Size}</td><td>${sc_dir.Activations || 1}</td><td>${sc_dir.CurrentStructure || 0}/${sc_dir.MaxStructure || 0}</td><td>${sc_dir.CurrentStress || 0}/${sc_dir.MaxStress || 0}</td>\n        </tr>\n    </table>\n    `\n  console.log(sc_dir)\n  let sc_class = (!sc_dir._classes || sc_dir._classes.length == 0) ? \"NONE\" : sc_dir._classes[0].Name\n  let sc_tier = sc_dir.Tier ? sc_dir.Tier : 0\n  let sc_templates = construct_templates(sc_dir)\n  let sc_list = ``\n  let sc_weapons = ``\n  if (!sc_dir._features || sc_dir._features.length == 0) {\n    sc_list += \"<p>NONE</p>\";\n    sc_weapons += \"<p>NONE</p>\";\n  } else {\n    let sc_origins = new Array;\n    sc_dir._features.forEach(f => {\n      let origin = f.Origin.name;\n      if (!sc_origins.includes(origin)) {\n        sc_origins.push(origin);\n      };\n    });\n    sc_origins.forEach(o => {\n      sc_list += construct_features(sc_dir, o);\n      sc_weapons += construct_weapons(sc_dir, o, sc_tier);\n    });\n  };\n\n  // ChatMessage.create({\n  //     user: game.user._id,\n  //     content: `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>`  + hase_table_html + stat_table_html + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list\n  // });\n\n  var scanContent = `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>` + hase_table_html + stat_table_html + `</div><div style=\"color: #000000; width: 100%; float: right; text-align: left;\"><h3>Weapons:</h3>` + sc_weapons + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list + `</div>`\n\n  //This checks and updates the scan entry for the target(s) if a single scan entry exists in the specified folder for the target(s) along with the updateExisting flag.\n  //If either are false then this creates a new scan entry.\n  \n  let rootScanFolder = journalFolderName ? journalFolder : game.journal;\n  let scanFolderId = journalFolderName ? journalFolder.id : null;\n\n  let scanObj = new Object();\n\n  scanObj.folder = scanFolderId;\n  \n  let scanEntry;\n\n  let matchingJournalEntries = rootScanFolder.contents.filter(e => e.name.match(sc_dir.Name));\n\n  if (matchingJournalEntries.length == 1 && updateExisting === true) {\n    console.log(\"Updating an existing scan\")\n    scanObj.name = matchingJournalEntries[0].name;\n    scanObj._id = matchingJournalEntries[0]._id;\n    scanObj.text = new Object();\n    scanObj.text.content = scanContent;\n    scanEntry = game.journal.getName(scanObj.name);\n    let scanPage = scanEntry.pages.getName(scanObj.name)\n    await scanPage.update(scanObj);\n  } else {\n    console.log(\"Creating a new scan\")\n    let scanCount = zeroPad(rootScanFolder.contents.filter(e => e.name.startsWith(nameTemplate)).length + startingNumber, numberLength);\n    scanObj.name = nameTemplate + scanCount + ` - ` + sc_dir.Name;\n    scanObj.content = scanContent;\n    scanEntry = await JournalEntry.create(scanObj);\n  };\n\n  scanEntry.update({ permission: { default: permissionLevel } });\n  scanEntry.sheet.render(true);\n\n})","flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Compendium.lancer.core_macros.z0pdvwE0FitMzwRJ"}},"ownership":{"default":0,"0DqqjXMUZ4L8l5FY":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1689295072726,"modifiedTime":1702203319323,"lastModifiedBy":"0DqqjXMUZ4L8l5FY"},"folder":null,"sort":0,"_id":"ibAbNGemsPFWewUJ"}
{"name":"New Macro","type":"chat","scope":"global","author":"1zMK3JgrEAsLgu7f","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"1zMK3JgrEAsLgu7f":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1708254994818,"modifiedTime":1708254994818,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"jLhgQbpLhPmoGwAZ"}
{"name":"Scan (Journal)","type":"script","author":"SmBZsrIgzoBu1l21","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/tech_quick.svg","scope":"global","command":"//Sanity Check - Can this user even create folders and journal entries? Does the folder journal folder exist?\nif (JournalEntry.canUserCreate(game.user) == false) {\n  ui.notifications.error(`${game.user.name} attempted to run SCAN to Journal but lacks proper permissions. Please correct and try again.`);\n  return;\n};\n\n//Variables - Change these to control the macro\n\n//journalFolderName - The name, as displayed in foundry, of the folder you want the journal entries to save to. Remember to enclose in quotes: 'example'\nvar journalFolderName = 'SCAN Database';\n\n//nameTemplate - The text before the scan number and target name. Remember to enclose in quotes: 'example'\nvar nameTemplate = 'SCAN: ';\n\n//numberLength - The total length of the scan number, extra spaces are filled with 0s. Setting this to 3, for example would produce scan number 001 on your first scan. Integers only and no quotes.\nvar numberLength = 3;\n\n//startingNumber - If you want the scan number to start at something other than 1 then change this. Integers only and no quotes.\nvar startingNumber = 1;\n\n//permissionLevel - This sets the default permission level of the scan entry. This must be an integer between 0 and 3 where 0 is \"None\", 1 is \"Limited\", 2 is \"Observer\", and 3 is \"Owner\"\nvar permissionLevel = 3;\n\n//updateExisting - This macro will check if a scan journal entry exists and update it, set this to false if you want it to create a new scan journal entry.\nvar updateExisting = true;\n\n//targets - Gets the data for your currently selected target(s) and stores it for later use. Do not change.\nlet targets = Array.from(game.user.targets);\n\n//Functions\n//zeroPad - Adds a set number 0s to the fed number to produce a consistent length number.\nconst zeroPad = (num, places) => String(num).padStart(places, '0');\n\n//sort_features - Sorts the feature list for the scanned target    \nfunction sort_features(a, b) {\n  return b.Origin.base - a.Origin.base\n};\n\n//construct_features - Builds out the list of selectable features for the scanned target, includes support for exotics.\nfunction construct_features(sc_dir, o) {\n  let sc_list = ``;\n  sc_list += `<p>${o}</p>`\n  let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n  sc_features.forEach(i => {\n    let sc_name = ``;\n    let sc_desc = ``;\n    if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n      sc_name = \"<code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC SYSTEM</code>\";\n      sc_desc = \"???\";\n    }\n    else {\n      sc_name = i.Name;\n      if (i.Effect) {\n        sc_desc = i.Effect;\n      } else {\n        sc_desc = \"No description given.\";\n      }\n      if (i.Trigger) {\n        sc_desc = `Trigger:${i.Trigger}<br>${sc_desc}`;\n      }\n    }\n    let sc_entry = `<details><summary>${sc_name}</summary><p>${sc_desc}</p></details>`;\n    sc_list += sc_entry;\n  });\n  return sc_list\n};\n\n//construct_weapons - Builds out the table of weapons for the scanned target, includes support for exotics.\nfunction construct_weapons(sc_dir, o, sc_tier) {\n  let sc_weapons = ``;\n  let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n  sc_features.forEach(i => {\n    let sc_name = ``;\n    let sc_desc = ``;\n    let sc_entry = ``;\n    let sc_range = ``;\n    let sc_damage = ``;\n    let sc_accuracy = ``;\n    if (!i.WepType) { return sc_weapons };\n    sc_weapons += `<table>`;\n    if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n      sc_name = \"<tr><th><code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC WEAPON</code></th></tr>\";\n      sc_desc = \"<tr><td>???</td></tr>\";\n      sc_entry = sc_name + sc_desc;\n    }\n    else {\n      sc_name = `<tr><th colspan=\"4\">${i.Name}</th></tr>`;\n      sc_entry += sc_name;\n      sc_desc = `<tr>`;\n      sc_desc += `<td>+${i.AttackBonus[sc_tier - 1]} ATTACK</td>`;\n      if (i.Accuracy[sc_tier - 1]) {\n        if (i.Accuracy[sc_tier - 1] > 0) {\n          sc_accuracy = '+' + i.Accuracy[sc_tier - 1] + ' ACCURACY'\n        } else {\n          sc_accuracy = '-' + i.Accuracy[sc_tier - 1] + ' DIFFICULTY'\n        };\n      };\n      sc_desc += `<td>${sc_accuracy}</td>`;\n      if (i.Range.length > 0) { i.Range.forEach(r => sc_range += r.RangeType + ' ' + r.Value + '&nbsp&nbsp&nbsp') };\n      sc_desc += `<td>${sc_range}</td>`;\n      if (i.Damage.length > 0) { i.Damage[sc_tier - 1].forEach(d => sc_damage += d.Value + ' ' + d.DamageType + '&nbsp&nbsp&nbsp') };\n      sc_desc += `<td>${sc_damage}</td>`;\n      if (i.Loaded) { sc_desc += `<td>LOADED</td>` } else { sc_desc += `<td>UNLOADED</td>` };\n      if (i.Uses > 0 && i.BaseLimit > 0) { sc_desc += `<td>USES: ${i.Uses}/${i.BaseLimit}</td>` };\n      sc_desc += `<tr>`;\n      if (i.Trigger) {\n        sc_desc += `<tr><td colspan=\"6\"><details><summary>Trigger</summary><p>${i.Trigger}</p></details></td></tr>`;\n      };\n      if (i.OnHit) {\n        sc_desc += `<tr><td colspan=\"6\"><details><summary>On Hit</summary><p>${i.OnHit}</p></details></td></tr>`;\n      };\n      if (i.Effect) {\n        sc_desc += `<tr><td colspan=\"6\">${i.Effect}</td></tr>`;\n      };\n      if (i.Tags.length > 0) {\n        sc_desc += `<tr><td colspan=\"6\"><details><summary>Tags</summary>`;\n        i.Tags.forEach((t, index) => {\n          sc_desc += `<p>${t.Tag.Name.replace(\"{VAL}\", t.Value)}</p>`;\n        });\n        sc_desc += `</details></td></tr>`;\n      };\n      sc_entry += sc_desc;\n    }\n    sc_weapons += sc_entry;\n    sc_weapons += `</table>`\n  });\n  return sc_weapons\n};\n\n//construct_templates\nfunction construct_templates(sc_dir) {\n  let sc_templates = ``;\n  let sc_temp = sc_dir._templates;\n  if (!sc_temp || sc_temp.length == 0) {\n    sc_templates += \"<p>NONE</p>\";\n  } else {\n    sc_temp.forEach(i => {\n      let sc_entry = `<p>${i.Name}</p>`;\n      sc_templates += sc_entry;\n    });\n  }\n\n  sc_templates += \"<br>\";\n  return sc_templates\n};\nconst journalFolder = game.folders.getName(journalFolderName)\nif (!journalFolder && journalFolderName.length > 0) {\n  try {\n    await Folder.create({ name: journalFolderName, type: \"JournalEntry\" })\n  } catch (error) {\n    ui.notifications.error(`${journalFolderName} does not exist and must be created manually by a user with permissions to do so.`);\n    return;\n  }\n};\n\ntargets.forEach(async (target, index) => {\n  let sc_dir = await target.document.actor.system.derived.mm_promise;\n  let hase_table_html = `\n    <p><img style=\"border: 3px dashed #000000; float: left; margin-right: 5px; margin-left: 5px;\" src=\"${target.document.actor.img}\" width=\"30%\" height=\"30%\" /></p>\n    <div style=\"color: #000000; width: 65%; float: right; text-align: left;\">\n    <table>\n        <tr>\n            <th>HULL</th><th>AGI</th><th>SYS</th><th>ENG</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Hull || 0}</td><td>${sc_dir.Agi || 0}</td><td>${sc_dir.Sys || 0}</td><td>${sc_dir.Eng || 0}</td>\n        </tr>\n    </table>\n    `\n  let stat_table_html = `\n    <table>\n        <tr>\n            <th>Armor</th><th>HP</th><th>Heat</th><th>Speed</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Armor}</td><td>${sc_dir.CurrentHP}/${sc_dir.MaxHP}</td><td>${sc_dir.CurrentHeat || 0}/${sc_dir.HeatCapacity || 0}</td><td>${sc_dir.Speed}</td>\n        </tr>\n        <tr>\n            <th>Evasion</th><th>E-Def</th><th>Save</th><th>Sensors</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Evasion}</td><td>${sc_dir.EDefense}</td><td>${sc_dir.SaveTarget}</td><td>${sc_dir.SensorRange}</td>\n        </tr>\n        <tr>\n            <th>Size</th><th>Activ</th><th>Struct</th><th>Stress</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Size}</td><td>${sc_dir.Activations || 1}</td><td>${sc_dir.CurrentStructure || 0}/${sc_dir.MaxStructure || 0}</td><td>${sc_dir.CurrentStress || 0}/${sc_dir.MaxStress || 0}</td>\n        </tr>\n    </table>\n    `\n  console.log(sc_dir)\n  let sc_class = (!sc_dir._classes || sc_dir._classes.length == 0) ? \"NONE\" : sc_dir._classes[0].Name\n  let sc_tier = sc_dir.Tier ? sc_dir.Tier : 0\n  let sc_templates = construct_templates(sc_dir)\n  let sc_list = ``\n  let sc_weapons = ``\n  if (!sc_dir._features || sc_dir._features.length == 0) {\n    sc_list += \"<p>NONE</p>\";\n    sc_weapons += \"<p>NONE</p>\";\n  } else {\n    let sc_origins = new Array;\n    sc_dir._features.forEach(f => {\n      let origin = f.Origin.name;\n      if (!sc_origins.includes(origin)) {\n        sc_origins.push(origin);\n      };\n    });\n    sc_origins.forEach(o => {\n      sc_list += construct_features(sc_dir, o);\n      sc_weapons += construct_weapons(sc_dir, o, sc_tier);\n    });\n  };\n\n  // ChatMessage.create({\n  //     user: game.user._id,\n  //     content: `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>`  + hase_table_html + stat_table_html + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list\n  // });\n\n  var scanContent = `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>` + hase_table_html + stat_table_html + `</div><div style=\"color: #000000; width: 100%; float: right; text-align: left;\"><h3>Weapons:</h3>` + sc_weapons + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list + `</div>`\n\n  //This checks and updates the scan entry for the target(s) if a single scan entry exists in the specified folder for the target(s) along with the updateExisting flag.\n  //If either are false then this creates a new scan entry.\n  \n  let rootScanFolder = journalFolderName ? journalFolder : game.journal;\n  let scanFolderId = journalFolderName ? journalFolder.id : null;\n\n  let scanObj = new Object();\n\n  scanObj.folder = scanFolderId;\n  \n  let scanEntry;\n\n  let matchingJournalEntries = rootScanFolder.contents.filter(e => e.name.match(sc_dir.Name));\n\n  if (matchingJournalEntries.length == 1 && updateExisting === true) {\n    console.log(\"Updating an existing scan\")\n    scanObj.name = matchingJournalEntries[0].name;\n    scanObj._id = matchingJournalEntries[0]._id;\n    scanObj.text = new Object();\n    scanObj.text.content = scanContent;\n    scanEntry = game.journal.getName(scanObj.name);\n    let scanPage = scanEntry.pages.getName(scanObj.name)\n    await scanPage.update(scanObj);\n  } else {\n    console.log(\"Creating a new scan\")\n    let scanCount = zeroPad(rootScanFolder.contents.filter(e => e.name.startsWith(nameTemplate)).length + startingNumber, numberLength);\n    scanObj.name = nameTemplate + scanCount + ` - ` + sc_dir.Name;\n    scanObj.content = scanContent;\n    scanEntry = await JournalEntry.create(scanObj);\n  };\n\n  scanEntry.update({ permission: { default: permissionLevel } });\n  scanEntry.sheet.render(true);\n\n})","flags":{"combat-utility-belt":{"macroTrigger":""},"core":{"sourceId":"Compendium.lancer.core_macros.z0pdvwE0FitMzwRJ"}},"ownership":{"default":0,"2a2IgZ2kiAqXSGqu":3,"SmBZsrIgzoBu1l21":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.291","createdTime":1689295072726,"modifiedTime":1689726290067,"lastModifiedBy":"SmBZsrIgzoBu1l21"},"folder":null,"sort":0,"_id":"kzu4unQOEvNzJ7Ti"}
{"name":"Scan","type":"script","author":"1zMK3JgrEAsLgu7f","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/tech_quick.svg","scope":"global","command":"let targets = Array.from(game.user.targets);\n\ntargets.forEach(target => {\n    let sc_dir = target.document.actor._prev_derived.mm\n    let hase_table_html = `\n    <table>\n    <tr>\n    <th>HULL</th><th>AGI</th><th>SYS</th><th>ENG</th>\n    </tr>\n    <tr>\n    <td>${sc_dir.Hull}</td><td>${sc_dir.Agi}</td><td>${sc_dir.Sys}</td><td>${sc_dir.Eng}</td>\n    </tr>\n    </table>\n    `\n    let stat_table_html = `\n    <table>\n    <tr>\n    <th>Armor</th><th>HP</th><th>Heat</th><th>Speed</th>\n    </tr>\n    <tr>\n    <td>${sc_dir.Armor}</td><td>${sc_dir.CurrentHP}/${sc_dir.MaxHP}</td><td>${sc_dir.CurrentHeat}/${sc_dir.HeatCapacity}</td><td>${sc_dir.Speed}</td>\n    </tr>\n    <tr>\n    <th>Evasion</th><th>E-Defense</th><th>Save</th><th>Sensors</th>\n    </tr>\n    <tr>\n    <td>${sc_dir.Evasion}</td><td>${sc_dir.EDefense}</td><td>${sc_dir.SaveTarget}</td><td>${sc_dir.SensorRange}</td>\n    </tr>\n    <td>\n    </table>\n    `\n    let sc_list = ``\n    if (!sc_dir._features || sc_dir._features.length == 0) {\n        sc_list += \"<p>NONE</p>\";\n    } else {\n        sc_dir._features.forEach(i => {\n            let sc_desc = ``\n            if (i.Effect) {\n                sc_desc = i.Effect\n            } else {\n                sc_desc = \"No description given.\"\n            }\n            if (i.Trigger) {\n                sc_desc = \"Trigger: \" + i.Trigger + \"<br>\" + sc_desc\n            }\n            let sc_entry = \"<details><summary>\" + i.Name + \"</summary><p>\" + sc_desc + \"</p></details>\"\n            sc_list += sc_entry\n        });\n    }\n\n\n    let sc_templates = ``\n    if (!sc_dir._templates || sc_dir._templates.length == 0) {\n        sc_templates += \"<p>NONE</p>\";\n    } else {\n        sc_dir._templates.forEach(i => {\n            let sc_entry = \"<p>\" + i.Name + \"</p>\"\n            sc_templates += sc_entry\n        });\n    }\n\n    sc_templates += \"<br>\"\n\n    ChatMessage.create({\n        user: game.user._id,\n        content: `<h2>Scan results: ${sc_dir.Name}</h2>` + hase_table_html + stat_table_html + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list\n    });\n})","folder":null,"sort":0,"flags":{"core":{"sourceId":"Compendium.lancer.core_macros.3KPsYon0LoANWX54"}},"ownership":{"default":0,"F5fCs64xTvEk2U7z":3,"1zMK3JgrEAsLgu7f":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.291","createdTime":1689726513130,"modifiedTime":1689726513130,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"p7jSP6pov28Qyzv1"}
{"name":"New Macro","type":"chat","scope":"global","author":"40QdJPxdUZC5lf6X","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"40QdJPxdUZC5lf6X":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1697352916744,"modifiedTime":1697352916744,"lastModifiedBy":"40QdJPxdUZC5lf6X"},"_id":"rNxSjJk4XODylfuQ"}
{"name":"New Macro","type":"chat","scope":"global","author":"02KJJeoVrPep4Uam","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"02KJJeoVrPep4Uam":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1694334805007,"modifiedTime":1694334805007,"lastModifiedBy":"02KJJeoVrPep4Uam"},"_id":"t79NuhMi3EBYqjoT"}
{"name":"Structure Token","type":"script","author":"DEgP96KnkMaXvMQG","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/condition_shredded.svg","scope":"global","command":"if (canvas.tokens.controlled.length !== 1) {\n    ui.notifications.error(\"Select one and only one token\");\n    return;\n}\ngame.lancer.prepareStructureMacro(token.actor);","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.QwWNUKDeT8QcV1Hs"}},"ownership":{"default":0,"eC9B4k0LaO1597E7":3,"DEgP96KnkMaXvMQG":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1691905849577,"modifiedTime":1691905849577,"lastModifiedBy":"DEgP96KnkMaXvMQG"},"_id":"vzMYZFyGGm7Kbu2x"}
{"name":"Overheat Token","type":"script","author":"DEgP96KnkMaXvMQG","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/damage_heat.svg","scope":"global","command":"if (canvas.tokens.controlled.length !== 1) {\n  ui.notifications.error(\"Select one and only one token\");\n  return;\n}\ngame.lancer.prepareOverheatMacro(token.actor);","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.bzlNd5XL876ZeG16"}},"ownership":{"default":0,"eC9B4k0LaO1597E7":3,"DEgP96KnkMaXvMQG":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1691905860618,"modifiedTime":1691905860618,"lastModifiedBy":"DEgP96KnkMaXvMQG"},"_id":"xwRVLEv5UdWSJl4D"}
{"name":"Overheat Token","type":"script","author":"DEgP96KnkMaXvMQG","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/damage_heat.svg","scope":"global","command":"if (canvas.tokens.controlled.length !== 1) {\n  ui.notifications.error(\"Select one and only one token\");\n  return;\n}\ngame.lancer.prepareOverheatMacro(token.actor);","folder":null,"sort":0,"flags":{"core":{"sourceId":"Macro.bzlNd5XL876ZeG16"}},"ownership":{"default":0,"eC9B4k0LaO1597E7":3,"DEgP96KnkMaXvMQG":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1691905846189,"modifiedTime":1691905846189,"lastModifiedBy":"DEgP96KnkMaXvMQG"},"_id":"yGkKBscMO9fgguy5"}
{"name":"Scan (Journal)","type":"script","author":"1zMK3JgrEAsLgu7f","img":"https://assets.forge-vtt.com/bazaar/systems/lancer/assets/assets/icons/macro-icons/tech_quick.svg","scope":"global","command":"//Sanity Check - Can this user even create folders and journal entries? Does the folder journal folder exist?\nif (JournalEntry.canUserCreate(game.user) == false) {\n    ui.notifications.error(`${game.user.name} attempted to run SCAN to Journal but lacks proper permissions. Please correct and try again.`);\n    return;\n};\n\n//Variables - Change these to control the macro\n\n//journalFolder - The name, as displayed in foundry, of the folder you want the journal entries to save to. Remember to enclose in quotes: 'example'\nvar journalFolder = 'SCAN Database';\n\n//nameTemplate - The text before the scan number and target name. Remember to enclose in quotes: 'example'\nvar nameTemplate = 'SCAN: ';\n\n//numberLength - The total length of the scan number, extra spaces are filled with 0s. Setting this to 3, for example would produce scan number 001 on your first scan. Integers only and no quotes.\nvar numberLength = 3;\n\n//startingNumber - If you want the scan number to start at something other than 1 then change this. Integers only and no quotes.\nvar startingNumber = 1;\n\n//permissionLevel - This sets the default permission level of the scan entry. This must be an integer between 0 and 3 where 0 is \"None\", 1 is \"Limited\", 2 is \"Observer\", and 3 is \"Owner\"\nvar permissionLevel = 3;\n\n//updateExisting - This macro will check if a scan journal entry exists and update it, set this to false if you want it to create a new scan journal entry.\nvar updateExisting = true;\n\n//targets - Gets the data for your currently selected target(s) and stores it for later use. Do not change.\nlet targets = Array.from(game.user.targets);\n\n//Functions\n//zeroPad - Adds a set number 0s to the fed number to produce a consistent length number.\nconst zeroPad = (num, places) => String(num).padStart(places, '0');\n\n//sort_features - Sorts the feature list for the scanned target    \nfunction sort_features(a, b) {\n    return b.Origin.base-a.Origin.base\n};\n\n//construct_features - Builds out the list of selectable features for the scanned target, includes support for exotics.\nfunction construct_features(sc_dir, o) {\n    let sc_list = ``;\n    sc_list += `<p>${o}</p>`\n    let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n    sc_features.forEach(i => {\n        let sc_name = ``;\n        let sc_desc = ``;\n        if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n            sc_name = \"<code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC SYSTEM</code>\";\n            sc_desc = \"???\";\n        }\n        else {\n            sc_name = i.Name;\n            if (i.Effect) {\n                sc_desc = i.Effect;\n            } else {\n                sc_desc = \"No description given.\";\n            }\n            if (i.Trigger) {\n                sc_desc = `Trigger:${i.Trigger}<br>${sc_desc}`;\n            }\n        }\n        let sc_entry = `<details><summary>${sc_name}</summary><p>${sc_desc}</p></details>`;\n        sc_list += sc_entry;\n    });\n    return sc_list\n};\n\n//construct_weapons - Builds out the table of weapons for the scanned target, includes support for exotics.\nfunction construct_weapons(sc_dir, o, sc_tier) {\n    let sc_weapons = ``;\n    let sc_features = sc_dir._features.filter(f => f.Origin.name == o).sort(sort_features)\n    sc_features.forEach(i => {\n        let sc_name = ``;\n        let sc_desc = ``;\n        let sc_entry = ``;\n        let sc_range = ``;\n        let sc_damage = ``;\n        let sc_accuracy = ``;\n        if (!i.WepType) {return sc_weapons};\n        sc_weapons += `<table>`;\n        if (i.Origin.name == \"EXOTIC\" && !i.Origin.base) {\n            sc_name = \"<tr><th><code class=\\\"horus--subtle\\\">UNKNOWN EXOTIC WEAPON</code></th></tr>\";\n            sc_desc = \"<tr><td>???</td></tr>\";\n            sc_entry = sc_name + sc_desc;\n        }\n        else {\n            sc_name = `<tr><th colspan=\"4\">${i.Name}</th></tr>`;\n            sc_entry += sc_name;\n            sc_desc = `<tr>`;\n            sc_desc += `<td>+${i.AttackBonus[sc_tier - 1]} ATTACK</td>`;\n            if (i.Accuracy[sc_tier - 1]) {\n                if (i.Accuracy[sc_tier - 1] > 0) {\n                    sc_accuracy = '+' + i.Accuracy[sc_tier - 1] + ' ACCURACY'\n                    } else {\n                        sc_accuracy = '-' + i.Accuracy[sc_tier - 1] + ' DIFFICULTY'\n                };\n            };\n            sc_desc += `<td>${sc_accuracy}</td>`;\n            if (i.Range.length > 0) {i.Range.forEach(r => sc_range += r.RangeType + ' ' + r.Value + '&nbsp&nbsp&nbsp')};\n            sc_desc += `<td>${sc_range}</td>`;\n            if (i.Damage.length > 0) {i.Damage[sc_tier - 1].forEach(d => sc_damage += d.Value + ' ' + d.DamageType + '&nbsp&nbsp&nbsp')};\n            sc_desc += `<td>${sc_damage}</td>`;\n            if (i.Loaded) {sc_desc += `<td>LOADED</td>`} else {sc_desc += `<td>UNLOADED</td>`};\n            if (i.Uses > 0 && i.BaseLimit > 0) {sc_desc += `<td>USES: ${i.Uses}/${i.BaseLimit}</td>`};\n            sc_desc += `<tr>`;\n            if (i.Trigger) {\n                sc_desc += `<tr><td colspan=\"6\"><details><summary>Trigger</summary><p>${i.Trigger}</p></details></td></tr>`;\n            };\n            if (i.OnHit) {\n                sc_desc += `<tr><td colspan=\"6\"><details><summary>On Hit</summary><p>${i.OnHit}</p></details></td></tr>`;\n            };\n            if (i.Effect) {\n                sc_desc += `<tr><td colspan=\"6\">${i.Effect}</td></tr>`;\n            };\n            if (i.Tags.length > 0) {\n                sc_desc += `<tr><td colspan=\"6\"><details><summary>Tags</summary>`;\n                i.Tags.forEach((t, index) => {\n                    sc_desc += `<p>${t.Tag.Name.replace(\"{VAL}\", t.Value)}</p>`;\n                });\n                sc_desc += `</details></td></tr>`;\n            };\n            sc_entry += sc_desc;\n        }\n        sc_weapons += sc_entry;\n        sc_weapons += `</table>`\n    });\n    return sc_weapons\n};\n\n//construct_templates\nfunction construct_templates(sc_dir) {\n    let sc_templates = ``;\n    let sc_temp = sc_dir._templates;\n    if (!sc_temp || sc_temp.length == 0) {\n        sc_templates += \"<p>NONE</p>\";\n    } else {\n        sc_temp.forEach(i => {\n            let sc_entry = `<p>${i.Name}</p>`;\n            sc_templates += sc_entry;\n        });\n    }\n\n    sc_templates += \"<br>\";\n    return sc_templates\n};\n\nif (!game.folders.getName(journalFolder) && journalFolder.length > 0) {\n    try {\n        await Folder.create({ name: journalFolder, type: \"JournalEntry\"})\n    } catch (error) {\n        ui.notifications.error(`${journalFolder} does not exist and must be created manually by a user with permissions to do so.`);\n        return;\n    }\n};\n\ntargets.forEach(async (target, index) => {\n    let sc_dir = target.document.actor._prev_derived.mm\n    let hase_table_html = `\n    <p><img style=\"border: 3px dashed #000000; float: left; margin-right: 5px; margin-left: 5px;\" src=\"${game.actors.getName(sc_dir.Name).img}\" width=\"30%\" height=\"30%\" /></p>\n    <div style=\"color: #000000; width: 65%; float: right; text-align: left;\">\n    <table>\n        <tr>\n            <th>HULL</th><th>AGI</th><th>SYS</th><th>ENG</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Hull || 0}</td><td>${sc_dir.Agi || 0}</td><td>${sc_dir.Sys || 0}</td><td>${sc_dir.Eng || 0}</td>\n        </tr>\n    </table>\n    `\n    let stat_table_html = `\n    <table>\n        <tr>\n            <th>Armor</th><th>HP</th><th>Heat</th><th>Speed</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Armor}</td><td>${sc_dir.CurrentHP}/${sc_dir.MaxHP}</td><td>${sc_dir.CurrentHeat || 0}/${sc_dir.HeatCapacity || 0}</td><td>${sc_dir.Speed}</td>\n        </tr>\n        <tr>\n            <th>Evasion</th><th>E-Def</th><th>Save</th><th>Sensors</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Evasion}</td><td>${sc_dir.EDefense}</td><td>${sc_dir.SaveTarget}</td><td>${sc_dir.SensorRange}</td>\n        </tr>\n        <tr>\n            <th>Size</th><th>Activ</th><th>Struct</th><th>Stress</th>\n        </tr>\n        <tr>\n            <td>${sc_dir.Size}</td><td>${sc_dir.Activations || 1}</td><td>${sc_dir.CurrentStructure || 0}/${sc_dir.MaxStructure || 0}</td><td>${sc_dir.CurrentStress || 0}/${sc_dir.MaxStress || 0}</td>\n        </tr>\n    </table>\n    `\n    console.log(sc_dir)\n    let sc_class = (!sc_dir._classes || sc_dir._classes.length == 0) ? \"NONE\" : sc_dir._classes[0].Name\n    let sc_tier = sc_dir.Tier ? sc_dir.Tier : 0\n    let sc_templates = construct_templates(sc_dir)\n    let sc_list = ``\n    let sc_weapons = ``\n    if (!sc_dir._features || sc_dir._features.length == 0) {\n        sc_list += \"<p>NONE</p>\";\n        sc_weapons += \"<p>NONE</p>\";\n    } else {\n        let sc_origins = new Array;\n        sc_dir._features.forEach(f => {\n            let origin = f.Origin.name;\n            if (!sc_origins.includes(origin)) {\n                sc_origins.push(origin);\n            };\n        });\n        sc_origins.forEach(o => {\n            sc_list += construct_features(sc_dir, o);\n            sc_weapons += construct_weapons(sc_dir, o, sc_tier);\n        });\n    };\n\n    // ChatMessage.create({\n    //     user: game.user._id,\n    //     content: `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>`  + hase_table_html + stat_table_html + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list\n    // });\n\n    var scanContent = `<h2>Scan results: ${sc_dir.Name}</h2>` + `<h3>Class: ${sc_class}, Tier ${sc_tier}</h3>`  + hase_table_html + stat_table_html + `</div><div style=\"color: #000000; width: 100%; float: right; text-align: left;\"><h3>Weapons:</h3>` + sc_weapons + `<h3>Templates:</h3>` + sc_templates + `<h3>Systems:</h3>` + sc_list + `</div>`\n\n    //This checks and updates the scan entry for the target(s) if a single scan entry exists in the specified folder for the target(s) along with the updateExisting flag.\n    //If either are false then this creates a new scan entry.\n\n    if (journalFolder) {\n        if (game.folders.getName(journalFolder).content.filter(e => e.name.match(sc_dir.Name)).length == 1 && updateExisting == true) {\n                let updateScan = new Object();\n                updateScan.name = game.folders.getName(journalFolder).content.filter(e => e.name.match(sc_dir.Name))[0].name;\n                updateScan.folder = game.folders.getName(journalFolder).id;\n                updateScan.content = scanContent;\n                updateScan._id = game.folders.getName(journalFolder).content.filter(e => e.name.match(sc_dir.Name))[0]._id;\n                game.journal.getName(game.folders.getName(journalFolder).content.filter(e => e.name.match(sc_dir.Name))[0].name).sheet._updateObject(\"\", updateScan);\n                game.journal.getName(game.folders.getName(journalFolder).content.filter(e => e.name.match(sc_dir.Name))[0].name).update({ permission: { default: permissionLevel }});\n                game.journal.getName(game.folders.getName(journalFolder).content.filter(e => e.name.match(sc_dir.Name))[0].name).sheet.render(true);\n            } else {\n                let scanCount = zeroPad(game.folders.getName(journalFolder).content.filter(e => e.name.match(nameTemplate)).length + startingNumber, numberLength); \n                let scanName = nameTemplate + scanCount + ` - ` + sc_dir.Name;\n                let newScan = new Object();\n                newScan.name = scanName;\n                newScan.folder = game.folders.getName(journalFolder).id;\n                newScan.content = scanContent;\n                await JournalEntry.create(newScan);\n                game.journal.getName(scanName).update({ permission: { default: permissionLevel }});\n                game.journal.getName(scanName).sheet.render(true);\n            };\n        } else {\n            if (game.journal.contents.filter(e => e.name.match(sc_dir.Name)).length == 1 && updateExisting == true) {\n                let updateScan = new Object();\n                updateScan.name = game.journal.contents.filter(e => e.name.match(sc_dir.Name))[0].name;\n                updateScan.folder = null;\n                updateScan.content = scanContent;\n                updateScan._id = game.journal.contents.filter(e => e.name.match(sc_dir.Name))[0]._id;\n                game.journal.contents.filter(e => e.name.match(sc_dir.Name))[0].sheet._updateObject(\"\", updateScan);\n                game.journal.contents.filter(e => e.name.match(sc_dir.Name))[0].update({ permission: { default: permissionLevel }});\n                game.journal.contents.filter(e => e.name.match(sc_dir.Name))[0].sheet.render(true);\n            } else {\n                let scanCount = zeroPad(game.journal.contents.filter(e => e.name.match(nameTemplate)).length + startingNumber, numberLength); \n                let scanName = nameTemplate + scanCount + ` - ` + sc_dir.Name;\n                let newScan = new Object();\n                newScan.name = scanName;\n                newScan.folder = null;\n                newScan.content = scanContent;\n                await JournalEntry.create(newScan);\n                game.journal.getName(scanName).update({ permission: { default: permissionLevel }});\n                game.journal.getName(scanName).sheet.render(true);\n            };\n        }\n})","folder":null,"sort":0,"flags":{"exportSource":{"world":"dev-lancer","system":"lancer","coreVersion":"9.269","systemVersion":"1.3.1"},"core":{"sourceId":"Macro.zM2TFB5z9CATwxXw"},"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"F5fCs64xTvEk2U7z":3,"1zMK3JgrEAsLgu7f":3},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.312","createdTime":1689726518105,"modifiedTime":1707038346970,"lastModifiedBy":"1zMK3JgrEAsLgu7f"},"_id":"ygome3z513ezzSnz"}
{"name":"New Macro","type":"chat","scope":"global","author":"02KJJeoVrPep4Uam","img":"icons/svg/dice-target.svg","command":"","folder":null,"sort":0,"ownership":{"default":0,"02KJJeoVrPep4Uam":3},"flags":{},"_stats":{"systemId":"lancer","systemVersion":"1.6.1","coreVersion":"10.303","createdTime":1694334793533,"modifiedTime":1694334793533,"lastModifiedBy":"02KJJeoVrPep4Uam"},"_id":"zXzpXqmXqLgPi772"}
